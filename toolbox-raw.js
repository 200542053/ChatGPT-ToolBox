/*
This file is automatically generated by ChatGPT based on instructions
*/

window.enableFakeMod = (localStorage.getItem("enable_fakemod") == 'false')?false:true;
// 创建一个新的style元素
var style = document.createElement('style');
// 在style元素中添加CSS样式
style.innerHTML = '.switch{position:relative;display:inline-block;width:60px;height:34px;}.switch input{opacity:0;width:0;height:0;}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;-webkit-transition:.4s;transition:.4s;}.slider:before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:white;-webkit-transition:.4s;transition:.4s;}input:checked + .slider{background-color:#2196F3;}input:focus + .slider{box-shadow:0 0 1px #2196F3;}input:checked + .slider:before{-webkit-transform:translateX(26px);-ms-transform:translateX(26px);transform:translateX(26px);}.slider.round{border-radius:34px;}.slider.round:before{border-radius:50%;}';
// 将style元素添加到页面的head中
document.head.appendChild(style);
window.switchEnableFakeMod = function(){
    let cswitch = document.querySelector("input#cswitch");
    let checked = cswitch?cswitch.checked:false;
    if (checked){
        window.enableFakeMod = true;
        localStorage.setItem("enable_fakemod",true);
    }else{
        window.enableFakeMod = false;
        localStorage.setItem('enable_fakemod',false);
    }
};
window.clearAllBoxItem =  function (){
    let navs = document.querySelectorAll('nav');
	for (var x = 0; x < navs.length; x++) {
        var allItems = navs[x].querySelectorAll('div.toolbox-item');
        for (var i = 0; i < allItems.length; i++) {
            allItems[i].remove();
        }
    }
};
window.boxInit = function() {
    window.clearAllBoxItem();
	var navs = document.querySelectorAll('nav');
	for (var x = 0; x < navs.length; x++) {
		let nav = navs[x];
        let switchLabel = document.createElement("div");
        switchLabel.setAttribute("class","toolbox-item flex py-3 px-3 items-center gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm flex-shrink-0 border border-white/20");
        switchLabel.innerHTML = `<svg t="1670527970700" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="9830" width="18" height="18"><path d="M514 114.3c-219.9 0-398.8 178.9-398.8 398.8 0 220 178.9 398.9 398.8 398.9s398.8-178.9 398.8-398.8S733.9 114.3 514 114.3z m0 685.2c-42 0-76.1-34.1-76.1-76.1 0-42 34.1-76.1 76.1-76.1 42 0 76.1 34.1 76.1 76.1 0 42.1-34.1 76.1-76.1 76.1z m0-193.8c-50.7 0-91.4-237-91.4-287.4 0-50.5 41-91.4 91.5-91.4s91.4 40.9 91.4 91.4c-0.1 50.4-40.8 287.4-91.5 287.4z" p-id="9831" fill="#dbdbdb"></path></svg>禁用数据监管<label class="switch" style="position: absolute; right: 15px;"><input id="cswitch" type="checkbox" ${ window.enableFakeMod?"checked='true'":""} onclick="window.switchEnableFakeMod()" ><span class="slider"></span></label>`;
        nav.insertBefore(switchLabel, nav.childNodes[1]); // 在 nav 元素的第二个子元素之前插入新建的 switchLabel 元素
	}
};

window.boxInit();
const oldf = window.fetch;
window.fetch = function(...args) {
	if (args[0].includes("moderations") && window.enableFakeMod) {
		return new Response('{}', {
			status: 200,
			statusText: "ok",
		})
	}
	if (args[0].includes("conversation")) {
		var headers = new Headers(args[1].headers);
		const authorization = headers.get("authorization");
		localStorage.setItem("authorization_last", authorization);
		const au = localStorage.getItem("import_authorization");
		if (au) {
			headers.set("authorization", au);
			args[1].headers = headers
		}
		if (args[1].body && args[1].method === "POST") {
			if (localStorage.getItem("next_conversation_id") && localStorage.getItem("next_parent_message_id")) {
				var nextConversationId = localStorage.getItem("next_conversation_id");
				var nextParentMessageId = localStorage.getItem("next_parent_message_id");
				localStorage.removeItem("next_conversation_id");
				localStorage.removeItem("next_parent_message_id");
				var ob = JSON.parse(args[1].body);
				ob.conversation_id = nextConversationId;
				ob.parent_message_id = nextParentMessageId;
				args[1].body = JSON.stringify(ob)
			} else {
				const bb = JSON.parse(args[1].body);
				localStorage.setItem("conversation_id_last", bb.conversation_id || "");
				localStorage.setItem("parent_message_id_last", bb.parent_message_id || "");
				localStorage.setItem("body_last", args[1].body)
			}
		}
	}
	return oldf(...args)
};

var resizeTimer = null;
window.onresize = function (){
        if (resizeTimer) clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function(){
            window.boxInit();
            var buttons = document.getElementsByTagName('button');
            for (var i = 0; i < buttons.length; i++) {
	            var button = buttons[i];
	            if (button.innerHTML.indexOf('sidebar') !== -1) {
		            button.addEventListener('click',function() { window.setTimeout(function() { window.boxInit()},300)});
	            }
            }
        } , 200);
};
window.onresize();
