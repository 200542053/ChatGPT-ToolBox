/*
This file is automatically generated by ChatGPT based on instructions
*/

window.enableFakeMod = (localStorage.getItem("enable_fakemod") == 'false')?false:true;

// 创建一个新的style元素
var style = document.createElement('style');

// 在style元素中添加CSS样式
style.innerHTML = '.switch{position:relative;display:inline-block;width:60px;height:34px;}.switch input{opacity:0;width:0;height:0;}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:#ccc;-webkit-transition:.4s;transition:.4s;}.slider:before{position:absolute;content:"";height:26px;width:26px;left:4px;bottom:4px;background-color:white;-webkit-transition:.4s;transition:.4s;}input:checked + .slider{background-color:#2196F3;}input:focus + .slider{box-shadow:0 0 1px #2196F3;}input:checked + .slider:before{-webkit-transform:translateX(26px);-ms-transform:translateX(26px);transform:translateX(26px);}.slider.round{border-radius:34px;}.slider.round:before{border-radius:50%;}';

// 将style元素添加到页面的head中
document.head.appendChild(style);


window.exportSaveData = function () {
    var conversation_id = localStorage.getItem("conversation_id_last") || "";
    var parent_message_id = localStorage.getItem("parent_message_id_last") || "";
    var authorization = localStorage.getItem("authorization_last");
    if (conversation_id == "" || parent_message_id == "" || conversation_id == "undefined" || parent_message_id == "undefined") {
        alert("请至少说两句话再使用这个功能!");
        return
    }
    var jsonObject = {
        conversation_id: conversation_id,
        parent_message_id: parent_message_id,
        authorization: authorization
    };
    var jsonString = JSON.stringify(jsonObject);
    var base64String = window.btoa(jsonString);
    return base64String;
};

window.importSaveData = function (savB64) {
    var decodedString = window.atob(savB64);
    var jsonObject = JSON.parse(decodedString);
    if (jsonObject.conversation_id === undefined || jsonObject.parent_message_id === undefined) {
        alert("存档损坏或数据有误。");
        return
    }
    localStorage.setItem("next_conversation_id", jsonObject.conversation_id);
    localStorage.setItem("next_parent_message_id", jsonObject.parent_message_id);
    alert("存档导入成功")
};

window.saveData =  function (savIndex,savName,savB64) {
    let now = new Date();
    let day = now.getDate();
    let month = now.getMonth() + 1; // Month is zero-based
    let year = now.getFullYear().toString().slice(-2);
    let hours = now.getHours();
    let minutes = now.getMinutes();
    let savList = JSON.parse(localStorage.getItem("savedata")) || [];
    let sav = {
        time: `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')} ${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`,
        name: (savName?savName:"存档"+(savList.length+1)),
        data: savB64
    }
    if (savIndex < 0 || savIndex >= savList.length){
        savList.push(sav);
    }else{
        savList[savIndex]=sav;
    }
    localStorage.setItem("savedata", JSON.stringify(savList));
    alert("保存完毕")
};

window.loadData =  function (savIndex) {
    let savList = JSON.parse(localStorage.getItem("savedata")) || [];
    if (savIndex < 0 || savIndex >= savList.length){
        alert("读取失败：存档索引超出范围");
        return false;
    }
    let sav = savList[savIndex];
    window.importSaveData(sav.data||"");
    return true
};

window.deleteData= function (savIndex) {
    let savList = JSON.parse(localStorage.getItem("savedata")) || [];
    if (savIndex < 0 || savIndex >= savList.length){
        alert("删除失败：存档索引超出范围");
        return false;
    }
    savList.splice(savIndex, 1);
    localStorage.setItem("savedata", JSON.stringify(savList));
    return true
};

window.clearAllSaveData =  function (){
    let navs = document.querySelectorAll('nav');
	for (var x = 0; x < navs.length; x++) {
        let allSavesA = navs[x].querySelectorAll('a.save-data');
        for (var i = 0; i < allSavesA.length; i++) {
            allSavesA[i].remove();
        }
        var allSavesDiv = navs[x].querySelectorAll('div.save-data');
        for (var i = 0; i < allSavesDiv.length; i++) {
            allSavesDiv[i].remove();
        }
    }
};

window.switchEnableFakeMod = function(){
    let cswitch = document.querySelector("input#cswitch");
    let checked = cswitch?cswitch.checked:false;
    if (checked){
        window.enableFakeMod = true;
        localStorage.setItem("enable_fakemod",true);
    }else{
        window.enableFakeMod = false;
        localStorage.setItem('enable_fakemod',false);
    }

};


window.boxInit = function() {
	var navs = document.querySelectorAll('nav');
	for (var x = 0; x < navs.length; x++) {
		let nav = navs[x];
		var aEle = nav.querySelectorAll('a');

        //清空之前的存档数据
        window.clearAllSaveData();
        if (nav.childNodes.length > 2){
            let savList = JSON.parse(localStorage.getItem("savedata")) || [];
            for (var i = 0; i < savList.length; i++) {
                let sav = savList[i];
                var newDiv = document.createElement("div"); // 新建 div 元素
                newDiv.setAttribute("class", "save-data flex py-3 px-3 items-center gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm flex-shrink-0 border border-white/20"); // 设置 div元素的 class 属性
                newDiv.innerHTML = `<a onclick='confirm("是否要载入:${sav.name}?") && window.loadData(${i});'style="max-width: calc(100% - 40px)"><font size="1" color="grey">${sav.time}</font><br>${sav.name}</a><a class="flex py-3 px-3 gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm flex-shrink-2 border border-white/40"style="position: absolute; right: 15px; color=red;"onclick='confirm("真的要删除:${sav.name}吗?") && confirm("删除之后将无法找回，确认删除？") && window.deleteData(${i}) && window.boxInit()'>删除</a>`;
                nav.insertBefore(newDiv, nav.childNodes[1]); // 在 nav 元素的第二个子元素之前插入新建的 a 元素
            }
            //为新建存档按钮新增 a 元素
            var newSave = document.createElement("a"); // 新建 a 元素
            newSave.setAttribute("class", "save-data flex py-3 px-3 items-center gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm flex-shrink-0 border border-white/20"); // 设置 a 元素的 class 属性
            newSave.innerHTML = '[ + ] 新建存档';
            newSave.onclick=function(){
                let savB64 = window.exportSaveData();
                if (savB64){
                    let savName = prompt("请给存档起个简短的名字");
                    if (savName){
                        window.saveData(-1,savName,savB64);
                        window.setTimeout(function() {window.boxInit()},300);
                    }
                }

            }
            nav.insertBefore(newSave, nav.childNodes[1]); // 在 nav 元素的第二个子元素之前插入新建的 a 元素

            
            let switchLabel = document.createElement("div");
            switchLabel.setAttribute("class","save-data flex py-3 px-3 items-center gap-3 rounded-md hover:bg-gray-500/10 transition-colors duration-200 text-white cursor-pointer text-sm flex-shrink-0 border border-white/20");
            switchLabel.innerHTML = `<svg t="1670527970700" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="9830" width="18" height="18"><path d="M514 114.3c-219.9 0-398.8 178.9-398.8 398.8 0 220 178.9 398.9 398.8 398.9s398.8-178.9 398.8-398.8S733.9 114.3 514 114.3z m0 685.2c-42 0-76.1-34.1-76.1-76.1 0-42 34.1-76.1 76.1-76.1 42 0 76.1 34.1 76.1 76.1 0 42.1-34.1 76.1-76.1 76.1z m0-193.8c-50.7 0-91.4-237-91.4-287.4 0-50.5 41-91.4 91.5-91.4s91.4 40.9 91.4 91.4c-0.1 50.4-40.8 287.4-91.5 287.4z" p-id="9831" fill="#dbdbdb"></path></svg>禁用数据监管<label class="switch" style="position: absolute; right: 15px;"><input id="cswitch" type="checkbox" ${ window.enableFakeMod?"checked='true'":""} onclick="window.switchEnableFakeMod()" ><span class="slider"></span></label>`;
            nav.insertBefore(switchLabel, nav.childNodes[1]); // 在 nav 元素的第二个子元素之前插入新建的 switchLabel 元素

        }
		for (var i = 0; i < aEle.length; i++) {
			if (aEle[i].innerHTML.indexOf('FAQ') >= 0) {
				aEle[i].removeAttribute('href');
				aEle[i].innerHTML = '<svg t="1670527911492" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="8753" width="16" height="16"><path d="M562.996016 643.229748V72.074369a50.996016 50.996016 0 0 0-101.992032 0v571.155379a50.996016 50.996016 0 0 0 101.992032 0z" fill="#dbdbdb" p-id="8754"></path><path d="M513.087915 144.080744L802.337317 432.446215a50.996016 50.996016 0 0 0 71.93838-72.210358L513.087915 0 149.588313 362.411687A50.996016 50.996016 0 0 0 221.594688 434.486056L513.087915 144.148738zM53.035857 643.229748v184.537583c0 109.471448 105.255777 192.832935 230.026029 192.832935h457.876228c124.770252 0 230.026029-83.361487 230.026029-192.832935V643.229748a50.996016 50.996016 0 1 0-101.992031 0v184.537583c0 47.256308-55.075697 90.840903-128.033998 90.840903H283.061886c-72.9583 0-128.033997-43.65259-128.033998-90.840903V643.229748a50.996016 50.996016 0 0 0-101.992031 0z" fill="#dbdbdb" p-id="8755"></path></svg>导出';
				aEle[i].onclick = function() {
					var textarea = document.querySelector("textarea");
                    let savB64 = window.exportSaveData();
                    if (savB64){
                        prompt("↓存档已导出至下方,请复制↓",savB64);
                    }
				}
			}
			if (aEle[i].innerHTML.indexOf('OpenAI Discord') >= 0) {
				aEle[i].removeAttribute('href');
				aEle[i].innerHTML = '<svg t="1670527878930" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7606" width="16" height="16"><path d="M563.2 68.266667v573.44a51.2 51.2 0 0 1-102.4 0V68.266667a51.2 51.2 0 0 1 102.4 0z" fill="#dbdbdb" p-id="7607"></path><path d="M513.092267 616.584533l290.474666-289.518933a51.2 51.2 0 0 1 72.226134 72.4992L513.092267 761.173333 148.138667 397.448533A51.2 51.2 0 0 1 220.433067 324.949333l292.6592 291.6352z" fill="#dbdbdb" p-id="7608"></path><path d="M51.2 641.706667v185.275733c0 109.909333 105.6768 193.604267 230.946133 193.604267h459.707734c125.269333 0 230.946133-83.694933 230.946133-193.604267V641.706667a51.2 51.2 0 1 0-102.4 0v185.275733c0 47.445333-55.296 91.204267-128.546133 91.204267H282.146133c-73.250133 0-128.546133-43.8272-128.546133-91.204267V641.706667a51.2 51.2 0 0 0-102.4 0z" fill="#dbdbdb" p-id="7609"></path></svg>导入';
				aEle[i].onclick = function() {
					var userInput = prompt("请黏贴存档到输入框");
                    window.importSaveData(userInput);
				}
			}
			if (aEle[i].innerHTML.indexOf('New Chat') >= 0) {
				aEle[i].removeAttribute('href');
				aEle[i].innerHTML = '<svg t="1671124885588" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2722" data-darkreader-inline-fill="" width="16" height="16"><path d="M960 416V192l-73.056 73.056a447.712 447.712 0 0 0-373.6-201.088C265.92 63.968 65.312 264.544 65.312 512S265.92 960.032 513.344 960.032a448.064 448.064 0 0 0 415.232-279.488 38.368 38.368 0 1 0-71.136-28.896 371.36 371.36 0 0 1-344.096 231.584C308.32 883.232 142.112 717.024 142.112 512S308.32 140.768 513.344 140.768c132.448 0 251.936 70.08 318.016 179.84L736 416h224z" p-id="2723" fill="#dbdbdb" data-darkreader-inline-fill="" style="--darkreader-inline-fill:#303435;"></path></svg>重置会话';
				aEle[i].onclick = function() {
                    if (confirm("点击确认后将刷新会话,并清除所有加载的存档状态。是否继续?")){
                        localStorage.removeItem('import_authorization');
                        localStorage.removeItem('next_parent_message_id');
                        localStorage.removeItem('next_conversation_id');
                        localStorage.removeItem('parent_message_id_last');
                        localStorage.removeItem('conversation_id_last');
                    }
				}
			}
		}
	}
};



window.boxInit();
alert("赛博工具娘v1.1.6脚本已启用。本工具由ChatGPT在指导下自行研发~\r\n\r\n更新:\r\n1.新增存档管理\r\n2.「关闭监管」分离为单独开关");
const oldf = window.fetch;
window.fetch = function(...args) {
	if (args[0].includes("moderations") && window.enableFakeMod) {
		return new Response('{}', {
			status: 200,
			statusText: "ok",
		})
	}
	if (args[0].includes("conversation")) {
		var headers = new Headers(args[1].headers);
		const authorization = headers.get("authorization");
		localStorage.setItem("authorization_last", authorization);
		const au = localStorage.getItem("import_authorization");
		if (au) {
			headers.set("authorization", au);
			args[1].headers = headers
		}
		if (args[1].body && args[1].method === "POST") {
			if (localStorage.getItem("next_conversation_id") && localStorage.getItem("next_parent_message_id")) {
				var nextConversationId = localStorage.getItem("next_conversation_id");
				var nextParentMessageId = localStorage.getItem("next_parent_message_id");
				localStorage.removeItem("next_conversation_id");
				localStorage.removeItem("next_parent_message_id");
				var ob = JSON.parse(args[1].body);
				ob.conversation_id = nextConversationId;
				ob.parent_message_id = nextParentMessageId;
				args[1].body = JSON.stringify(ob)
			} else {
				const bb = JSON.parse(args[1].body);
				localStorage.setItem("conversation_id_last", bb.conversation_id || "");
				localStorage.setItem("parent_message_id_last", bb.parent_message_id || "");
				localStorage.setItem("body_last", args[1].body)
			}
		}
	}
	return oldf(...args)
};

var resizeTimer = null;
window.onresize = function (){
        if (resizeTimer) clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function(){
                window.boxInit();
        } , 200);
}

var buttons = document.getElementsByTagName('button');
for (var i = 0; i < buttons.length; i++) {
	var button = buttons[i];
	if (button.innerHTML.indexOf('sidebar') !== -1) {
		button.addEventListener('click',
		function() {
			window.setTimeout(function() {
				window.boxInit();
			},
			300);
		})
	}
}
